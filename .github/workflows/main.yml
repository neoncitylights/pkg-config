name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [lts/*, latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci

  lint:
    name: lint (${{ matrix.tool }})
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        - tool: eslint
          npm-cmd-suffix: es
          env-cmd: |
            npm run lint:es-env
        - tool: stylelint
          npm-cmd-suffix: style
          env-cmd: |
            node --version
            npm --version
            npm run lint:style-env
        - tool: markdownlint
          npm-cmd-suffix: md
          env-cmd: |
            node --version
            npm --version
            npm run lint:md-env
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Print environment info
        run: |
          ${{ matrix.env-cmd }}
      - name: Lint
        run: npm run lint:${{ matrix.npm-cmd-suffix }}

  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #     - name: Install Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: latest
  #         cache: 'npm'
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Test
  #       run: npm run test
  #     - name: Upload code coverage
  #       uses: codecov/codecov-action@v3
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
  #         verbose: true

  pkg-is-publishable:
    name: pkg-is-publishable (${{ matrix.package }})
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        package:
          - eslint-config
          - stylelint-config
          - markdownlint-config
          - tsconfig
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Check if package is publishable
        run: npm publish --dry-run
        working-directory: packages/${{ matrix.package }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  ci-success:
    runs-on: ubuntu-latest
    if: ${{ success() && github.event_name == 'push' }}
    needs:
      - build
      - lint-md
      - lint-stylelint
      - lint-eslint
      - pkg-is-publishable
      # - test
    steps:
      - name: ✅ CI succeeded
        run: exit 0

  ci-success-pr:
    runs-on: ubuntu-latest
    if: ${{ success() && github.event_name == 'pull_request' }}
    needs:
      - build
      - lint-md
      - lint-stylelint
      - lint-eslint
      - pkg-is-publishable
      # - test
    steps:
      - name: ✅ CI succeeded
        run: exit 0
