name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [lts/*, latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci

  lint-md:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint:md


  lint-stylelint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint:style

  lint-eslint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint:es

  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #     - name: Install Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: latest
  #         cache: 'npm'
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Test
  #       run: npm run test
  #     - name: Upload code coverage
  #       uses: codecov/codecov-action@v3
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
  #         verbose: true

  ci-success:
    runs-on: ubuntu-latest
    if: ${{ success() && github.event_name == 'push' }}
    needs:
      - build
      - lint-md
      - lint-stylelint
      - lint-eslint
      # - test
    steps:
      - name: ✅ CI succeeded
        run: exit 0

  ci-success-pr:
    runs-on: ubuntu-latest
    if: ${{ success() && github.event_name == 'pull_request' }}
    needs:
      - build
      - lint-md
      - lint-stylelint
      - lint-eslint
      # - test
    steps:
      - name: ✅ CI succeeded
        run: exit 0
